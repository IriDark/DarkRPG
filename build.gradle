buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

plugins {
    id "com.modrinth.minotaur" version "2.+"
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = '1.20.1-build-0.6b'
group = 'com.github.IriDark'
archivesBaseName = 'Valoria'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'parchment', version: '2023.06.26-1.20.1'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            args "--username", "IriDark_"

            workingDirectory project.file('run')
	        jvmArg "-Dmixin.env.disableRefMap=true"
		
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                valoria {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
	        jvmArg "-Dmixin.env.disableRefMap=true"
		
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                valoria {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            jvmArg "-Dmixin.env.disableRefMap=true"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'valoria', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                valoria {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "valoria.refmap.json"
    config "valoria.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
    maven {
        url "https://maven.minecraftforge.net/releases/"
        authentication {
            basic(BasicAuthentication)
        }
        credentials {
            username = System.env.MAVEN_USER ?:'fake'
            password = System.env.MAVEN_PASSWORD ?:'news'
        }
    }
    maven { url 'https://jitpack.io' }
    maven {
        url "https://maven.theillusivec4.top/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        url "https://cursemaven.com"
    }
    maven {
        url "https://maven.blamejared.com"
    }

    //flatDir {
    //     dir 'libs'
    //}

    mavenLocal()
    mavenCentral()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.2.0'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.3.5+1.20.1:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.3.5+1.20.1")

    compileOnly fg.deobf("mezz.jei:jei-1.20.1-common-api:15.0.0.14")
    runtimeOnly fg.deobf("mezz.jei:jei-1.20.1-forge:15.0.0.14")

    compileOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-1.20.1:14.0.13")
    runtimeOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-1.20.1:14.0.13")

    implementation fg.deobf("curse.maven:bookshelf-228525:5084135")
    implementation fg.deobf("curse.maven:enchantment-descriptions-250419:5136988")
    //implementation fg.deobf("curse.maven:plusutils-979003:5133553")
    implementation fg.deobf("curse.maven:appleskin-248787:4770828")
    implementation fg.deobf("curse.maven:advanced-xray-256256:4840340")
    implementation fg.deobf("curse.maven:farmers-delight-398521:4679319")
    implementation fg.deobf("curse.maven:model-gap-fix-676136:4607206")
    implementation fg.deobf("curse.maven:just-enough-effect-descriptions-jeed-532286:4978810")
    //implementation fg.deobf("curse.maven:mutil-351914:4824501")
    //implementation fg.deobf("curse.maven:tetra-289712:4857842")
    implementation fg.deobf("curse.maven:jade-324717:4986594")
}

jar {
    manifest {
        attributes([
                "Specification-Title": "valoria",
                "Specification-Vendor": "IriDark",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor" :"IriDark",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        //maven {
        //    url = "file:///${project.projectDir}/../mcmodsrepo"
        //}
        maven {
            url "https://maven.minecraftforge.net/releases/"
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                username = System.env.MAVEN_USER ?:'fake'
                password = System.env.MAVEN_PASSWORD ?:'news'
            }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

// Produces the source-jar, which is for JitPack
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

modrinth {
    token = System.getenv("modrinthtoken") // Remember to have the MODRINTH_TOKEN environment variable set or else this will fail - just make sure it stays private!
    projectId = "valoriadev" // This can be the project ID or the slug. Either will work!
    versionNumber = "0.6b.240324242" // You don't need to set this manually. Will fail if Modrinth has this version already
    versionType = "alpha" // This is the default -- can also be `beta` or `alpha`
    versionName = "Dev Build"
    uploadFile = tasks.jar // With Loom, this MUST be set to `remapJar` instead of `jar`!
    changelog = "Just a DevBuild to test things, its some sorta like minecraft snapshots to find bugs and report them"
    dependencies { // A special DSL for creating dependencies
        // scope.type
        // The scope can be `required`, `optional`, `incompatible`, or `embedded`
        // The type can either be `project` or `version`
        required.project "curios" // Creates a new required dependency on Fabric API
    }
}

artifacts {
    archives jar
}